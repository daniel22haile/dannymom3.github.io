1. Order the following functions in increasing order of growth rate.
      nlogn  2logn 4n3/2
      5n     2^n 4^n n^3 n^2 logn √n

   answer: 

   a. 2logn
   b. n^1/2
   c. 5n
   d. nlogn
   e. 4n3/2
   f. n^2logn
   g. n^3
   h. 2^n
   i. 4^n

------------------------------------------------------------------------------------------------
2. Give a big-O characterization, in terms of n, of the running time of the Loop1 method below:
    Algorithm Loop1(n) s←0
      fori← 1tondo
       s←s+i

    answer:
    since it's a single loop
       => O(n)
------------------------------------------------------------------------------------------------
3. Give a big-O characterization, in terms of n, of the running time of the Loop5 method below:

    Algorithm Loop5(n) s←0
     fori← 1 to n do
      forj← 1 to i do 
        s←s+i

      answer: 
            - The first loop is O(n)
            - The inner is depend on the i
            So, it's going to be O(n) * O(n)
            => O(n^2)

------------------------------------------------------------------------------------------------
4. Decide whether each of the following is true or false, and in each case, explain your answer.

    a. log n is O(n) 
      answer: true
                 => Because f(n) <= g(n). Therefore, logn < n
    b. 2^n is O(n^2)
    answer: false
                 => because f(n) > g(n), f(n) is exponential and bigger than 
                   quadratic (n^2)